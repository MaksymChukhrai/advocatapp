{"mappings":"C,A,W,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,QCIS,CAAA,OAAO,UAAU,CAAC,sBAAsB,OAAO,EAItD,AAAA,EAAA,GAAE,UAAU,KAAK,CAAC,WAGhB,AAFqB,AAAA,EAAA,GAAE,wBAEV,IAAI,CAAC,WAChB,IAAM,EAAU,AAAA,EAAA,GAAE,IAAI,EACF,EAAQ,IAAI,CAAC,2BACjC,IAAM,EAAS,EAAQ,IAAI,CAAC,4BAGtB,EAAsB,SAAS,CAAK,EACxC,IAAM,EAAe,EAAM,IAAI,CAAC,+BAC1B,EAAuB,AAAA,EAAA,GAAE,+CACzB,EAAa,EAAM,OAAO,CAAC,2BAC3B,EAAiB,EAAW,MAAM,GAAG,QAAQ,CAAC,2BAA2B,KAAK,CAAC,GAAc,GAAM,EAGzG,EAAqB,QAAQ,CAAC,aAG1B,EAAa,QAAQ,CAAC,eACxB,EAAa,WAAW,CAAC,aAGrB,EACF,EAAa,GAAG,CAAC,YAAa,oBAE9B,EAAa,GAAG,CAAC,YAAa,iBAGhC,EAAyB,EAAc,QAE3C,EAEM,EAAwB,SAAS,CAAK,EAC1C,IAAM,EAAa,EAAM,OAAO,CAAC,2BAC3B,EAAe,EAAM,QAAQ,CAAC,4BAA4B,GAAG,CAAC,GAC9D,EAAe,EAAM,IAAI,CAAC,+BAC1B,EAAiB,EAAW,MAAM,GAAG,QAAQ,CAAC,2BAA2B,KAAK,CAAC,GAAc,GAAM,EAI7G,AAD6B,AAAA,EAAA,GAAE,+CAA+C,GAAG,CAAC,GAC7D,QAAQ,CAAC,aAE1B,EAAqB,EAAO,GAE5B,WAAW,KACT,EAAM,WAAW,CAAC,gBAAgB,QAAQ,CAAC,cAC3C,EAAa,WAAW,CAAC,cAAc,QAAQ,CAAC,gBAChD,EAAa,WAAW,CAAC,aAGrB,EACF,EAAa,GAAG,CAAC,YAAa,oBAE9B,EAAa,GAAG,CAAC,YAAa,iBAGhC,EAAyB,EAAc,OACzC,EAAG,IACL,EAEM,EAAuB,SAAS,CAAK,CAAE,CAAY,EACvD,IAAM,EAAY,EAAM,UAAU,GAC5B,EAAe,EAAa,UAAU,GAE5C,EAAM,OAAO,CAAC,CAAE,MAAO,EAAY,CAAa,EAAG,KACnD,EAAa,OAAO,CAAC,CAAE,MAAO,CAAE,EAAG,IACrC,EAEM,EAA2B,SAAS,CAAY,CAAE,CAAM,EAC7C,SAAX,GACF,EAAa,OAAO,CAAC,CAAE,OAAQ,SAAU,QAAS,QAAS,EAAG,IAElE,EAGA,EAAO,EAAE,CAAC,QAAS,WACjB,IAAM,EAAQ,AAAA,EAAA,GAAE,IAAI,EAEhB,EAAM,QAAQ,CAAC,cACjB,EAAoB,GAEpB,EAAsB,EAE1B,EACF,EACF,E","sources":["<anon>","src/js/cases-desktop.jquery.js"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire48bd\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire48bd\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $9qak9 = parcelRequire(\"9qak9\");\n// Функция для проверки ширины экрана\nfunction $e61b5312f3c3f891$var$isDesktopWidth() {\n    return window.matchMedia(\"(min-width: 768px)\").matches;\n}\nif ($e61b5312f3c3f891$var$isDesktopWidth()) (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(document).ready(function() {\n    const $caseModules = (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(\".case-card-pc-module\");\n    $caseModules.each(function() {\n        const $module = (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(this);\n        const $containers = $module.find(\".card-flex-pc-container\");\n        const $cards = $module.find(\".card-image-pc-container\");\n        // Функции для обработки кликов и анимаций\n        const handleWideCardClick = function($card) {\n            const $description = $card.find(\".case-description-container\");\n            const $previousDescription = (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(\".case-description-container:not(.is-hidden)\");\n            const $container = $card.closest(\".card-flex-pc-container\");\n            const isRightAligned = $container.parent().children(\".card-flex-pc-container\").index($container) % 2 === 1;\n            // Закрытие предыдущего открытого описания\n            $previousDescription.addClass(\"is-hidden\");\n            // Открытие текущего описания\n            if ($description.hasClass(\"is-hidden\")) {\n                $description.removeClass(\"is-hidden\");\n                // Центрирование описания\n                if (isRightAligned) $description.css(\"transform\", \"translateX(-35%)\");\n                else $description.css(\"transform\", \"translateX(0)\");\n                animateDescriptionToggle($description, \"open\");\n            }\n        };\n        const handleNarrowCardClick = function($card) {\n            const $container = $card.closest(\".card-flex-pc-container\");\n            const $siblingCard = $card.siblings(\".card-image-pc-container\").not($card);\n            const $description = $card.find(\".case-description-container\");\n            const isRightAligned = $container.parent().children(\".card-flex-pc-container\").index($container) % 2 === 1;\n            // Закрытие предыдущего открытого описания\n            const $previousDescription = (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(\".case-description-container:not(.is-hidden)\").not($description);\n            $previousDescription.addClass(\"is-hidden\");\n            animateCardExpansion($card, $siblingCard);\n            setTimeout(()=>{\n                $card.removeClass(\"narrow-image\").addClass(\"wide-image\");\n                $siblingCard.removeClass(\"wide-image\").addClass(\"narrow-image\");\n                $description.removeClass(\"is-hidden\");\n                // Центрирование описания\n                if (isRightAligned) $description.css(\"transform\", \"translateX(-35%)\");\n                else $description.css(\"transform\", \"translateX(0)\");\n                animateDescriptionToggle($description, \"open\");\n            }, 500);\n        };\n        const animateCardExpansion = function($card, $siblingCard) {\n            const cardWidth = $card.outerWidth();\n            const siblingWidth = $siblingCard.outerWidth();\n            $card.animate({\n                width: cardWidth + siblingWidth\n            }, 500);\n            $siblingCard.animate({\n                width: 0\n            }, 500);\n        };\n        const animateDescriptionToggle = function($description, action) {\n            if (action === \"open\") $description.animate({\n                height: \"toggle\",\n                opacity: \"toggle\"\n            }, 500);\n        };\n        // Добавление обработчиков событий кликов\n        $cards.on(\"click\", function() {\n            const $card = (0, (/*@__PURE__*/$parcel$interopDefault($9qak9)))(this);\n            if ($card.hasClass(\"wide-image\")) handleWideCardClick($card);\n            else handleNarrowCardClick($card);\n        });\n    });\n});\n\n})();\n//# sourceMappingURL=cases.bd74e939.js.map\n","import $ from 'jquery';\r\n\r\n// Функция для проверки ширины экрана\r\nfunction isDesktopWidth() {\r\n  return window.matchMedia('(min-width: 768px)').matches;\r\n}\r\n\r\nif (isDesktopWidth()) {\r\n  $(document).ready(function() {\r\n    const $caseModules = $('.case-card-pc-module');\r\n\r\n    $caseModules.each(function() {\r\n      const $module = $(this);\r\n      const $containers = $module.find('.card-flex-pc-container');\r\n      const $cards = $module.find('.card-image-pc-container');\r\n\r\n      // Функции для обработки кликов и анимаций\r\n      const handleWideCardClick = function($card) {\r\n        const $description = $card.find('.case-description-container');\r\n        const $previousDescription = $('.case-description-container:not(.is-hidden)');\r\n        const $container = $card.closest('.card-flex-pc-container');\r\n        const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\r\n\r\n        // Закрытие предыдущего открытого описания\r\n        $previousDescription.addClass('is-hidden');\r\n\r\n        // Открытие текущего описания\r\n        if ($description.hasClass('is-hidden')) {\r\n          $description.removeClass('is-hidden');\r\n          \r\n          // Центрирование описания\r\n          if (isRightAligned) {\r\n            $description.css('transform', 'translateX(-35%)');\r\n          } else {\r\n            $description.css('transform', 'translateX(0)');\r\n          }\r\n          \r\n          animateDescriptionToggle($description, 'open');\r\n        }\r\n      };\r\n\r\n      const handleNarrowCardClick = function($card) {\r\n        const $container = $card.closest('.card-flex-pc-container');\r\n        const $siblingCard = $card.siblings('.card-image-pc-container').not($card);\r\n        const $description = $card.find('.case-description-container');\r\n        const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\r\n\r\n    // Закрытие предыдущего открытого описания\r\n    const $previousDescription = $('.case-description-container:not(.is-hidden)').not($description);\r\n    $previousDescription.addClass('is-hidden');\r\n\r\n        animateCardExpansion($card, $siblingCard);\r\n\r\n        setTimeout(() => {\r\n          $card.removeClass('narrow-image').addClass('wide-image');\r\n          $siblingCard.removeClass('wide-image').addClass('narrow-image');\r\n          $description.removeClass('is-hidden');\r\n          \r\n          // Центрирование описания\r\n          if (isRightAligned) {\r\n            $description.css('transform', 'translateX(-35%)');\r\n          } else {\r\n            $description.css('transform', 'translateX(0)');\r\n          }\r\n          \r\n          animateDescriptionToggle($description, 'open');\r\n        }, 500);\r\n      };\r\n\r\n      const animateCardExpansion = function($card, $siblingCard) {\r\n        const cardWidth = $card.outerWidth();\r\n        const siblingWidth = $siblingCard.outerWidth();\r\n\r\n        $card.animate({ width: cardWidth + siblingWidth }, 500);\r\n        $siblingCard.animate({ width: 0 }, 500);\r\n      };\r\n\r\n      const animateDescriptionToggle = function($description, action) {\r\n        if (action === 'open') {\r\n          $description.animate({ height: 'toggle', opacity: 'toggle' }, 500);\r\n        }\r\n      };\r\n\r\n      // Добавление обработчиков событий кликов\r\n      $cards.on('click', function() {\r\n        const $card = $(this);\r\n\r\n        if ($card.hasClass('wide-image')) {\r\n          handleWideCardClick($card);\r\n        } else {\r\n          handleNarrowCardClick($card);\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$9qak9","matchMedia","matches","document","ready","$caseModules","each","$module","find","$cards","handleWideCardClick","$card","$description","$previousDescription","$container","closest","isRightAligned","parent","children","index","addClass","hasClass","removeClass","css","animateDescriptionToggle","handleNarrowCardClick","$siblingCard","siblings","not","animateCardExpansion","setTimeout","cardWidth","outerWidth","siblingWidth","animate","width","action","height","opacity","on"],"version":3,"file":"cases.bd74e939.js.map"}
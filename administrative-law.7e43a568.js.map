{"mappings":"ACEA,SAAS,gBAAgB,CAAC,mBAAoB,WAC1C,IAAM,EAAQ,SAAS,gBAAgB,CAAC,cAClC,EAAU,SAAS,cAAc,CAAC,WAExC,EAAM,OAAO,CAAC,AAAA,IACV,EAAK,gBAAgB,CAAC,QAAS,SAAS,CAAK,EACzC,EAAM,cAAc,GACpB,IAAM,EAAM,IAAI,CAAC,YAAY,CAAC,YAG9B,MAAM,GACD,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IAIF,IAAM,EAAa,AADP,AADG,IAAI,YACA,eAAe,CAAC,EAAM,aAClB,aAAa,CAAC,YAAY,SAAS,AAE1D,CAAA,EAAQ,SAAS,CAAG,EAGpB,QAAQ,SAAS,CAAC,KAAM,GAAI,GAG5B,EAAM,OAAO,CAAC,AAAA,GAAQ,EAAK,SAAS,CAAC,MAAM,CAAC,WAC5C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SACvB,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,mBAAoB,GAC1D,EACJ,GAGA,OAAO,gBAAgB,CAAC,WAAY,WAChC,IAAM,EAAM,SAAS,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,GAC5C,MAAM,GACD,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IAGF,IAAM,EAAa,AADP,AADG,IAAI,YACA,eAAe,CAAC,EAAM,aAClB,aAAa,CAAC,YAAY,SAAS,AAE1D,CAAA,EAAQ,SAAS,CAAG,EAGpB,EAAM,OAAO,CAAC,AAAA,GAAQ,EAAK,SAAS,CAAC,MAAM,CAAC,WAC5C,SAAS,aAAa,CAAC,CAAC,YAAY,EAAE,EAAI,EAAE,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,SACjE,GACC,KAAK,CAAC,AAAA,GAAS,QAAQ,KAAK,CAAC,mBAAoB,GAC1D,EACJ","sources":["<anon>","src/js/service-types-sidebar-script.js"],"sourcesContent":["// src/js/service-types-sidebar-script.js\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    const links = document.querySelectorAll(\".sidebar a\");\n    const content = document.getElementById(\"content\");\n    links.forEach((link)=>{\n        link.addEventListener(\"click\", function(event) {\n            event.preventDefault();\n            const url = this.getAttribute(\"data-url\");\n            // Подгрузка контента услуги\n            fetch(url).then((response)=>response.text()).then((data)=>{\n                // Извлечение контента между тегами <body>\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(data, \"text/html\");\n                const newContent = doc.querySelector(\"#content\").innerHTML;\n                content.innerHTML = newContent;\n                // Обновление истории браузера\n                history.pushState(null, \"\", url);\n                // Обновление активного класса\n                links.forEach((link)=>link.classList.remove(\"select\"));\n                this.classList.add(\"select\");\n            }).catch((error)=>console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438:\", error));\n        });\n    });\n    // Обработка изменения состояния истории (при навигации назад/вперед)\n    window.addEventListener(\"popstate\", function() {\n        const url = location.pathname.split(\"/\").pop();\n        fetch(url).then((response)=>response.text()).then((data)=>{\n            const parser = new DOMParser();\n            const doc = parser.parseFromString(data, \"text/html\");\n            const newContent = doc.querySelector(\"#content\").innerHTML;\n            content.innerHTML = newContent;\n            // Обновление активного класса\n            links.forEach((link)=>link.classList.remove(\"select\"));\n            document.querySelector(`a[data-url=\"${url}\"]`).classList.add(\"select\");\n        }).catch((error)=>console.error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438:\", error));\n    });\n});\n\n//# sourceMappingURL=administrative-law.7e43a568.js.map\n","// src/js/service-types-sidebar-script.js\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    const links = document.querySelectorAll('.sidebar a');\r\n    const content = document.getElementById('content');\r\n\r\n    links.forEach(link => {\r\n        link.addEventListener('click', function(event) {\r\n            event.preventDefault();\r\n            const url = this.getAttribute('data-url');\r\n            \r\n            // Подгрузка контента услуги\r\n            fetch(url)\r\n                .then(response => response.text())\r\n                .then(data => {\r\n                    // Извлечение контента между тегами <body>\r\n                    const parser = new DOMParser();\r\n                    const doc = parser.parseFromString(data, 'text/html');\r\n                    const newContent = doc.querySelector('#content').innerHTML;\r\n\r\n                    content.innerHTML = newContent;\r\n\r\n                    // Обновление истории браузера\r\n                    history.pushState(null, '', url);\r\n\r\n                    // Обновление активного класса\r\n                    links.forEach(link => link.classList.remove('select'));\r\n                    this.classList.add('select');\r\n                })\r\n                .catch(error => console.error('Ошибка загрузки:', error));\r\n        });\r\n    });\r\n\r\n    // Обработка изменения состояния истории (при навигации назад/вперед)\r\n    window.addEventListener('popstate', function() {\r\n        const url = location.pathname.split('/').pop();\r\n        fetch(url)\r\n            .then(response => response.text())\r\n            .then(data => {\r\n                const parser = new DOMParser();\r\n                const doc = parser.parseFromString(data, 'text/html');\r\n                const newContent = doc.querySelector('#content').innerHTML;\r\n\r\n                content.innerHTML = newContent;\r\n\r\n                // Обновление активного класса\r\n                links.forEach(link => link.classList.remove('select'));\r\n                document.querySelector(`a[data-url=\"${url}\"]`).classList.add('select');\r\n            })\r\n            .catch(error => console.error('Ошибка загрузки:', error));\r\n    });\r\n});\r\n"],"names":["document","addEventListener","links","querySelectorAll","content","getElementById","forEach","link","event","preventDefault","url","getAttribute","fetch","then","response","text","data","newContent","doc","parser","DOMParser","parseFromString","querySelector","innerHTML","history","pushState","classList","remove","add","catch","error","console","window","location","pathname","split","pop"],"version":3,"file":"administrative-law.7e43a568.js.map"}
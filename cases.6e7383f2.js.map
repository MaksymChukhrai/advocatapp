{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,I,E,E,SCKA,MAAM,EAAiB,IACd,OAAO,UAAU,CAAC,sBAAsB,OAAO,CAGlD,EAAc,KAClB,AAAA,EAAA,GAAE,4BAA4B,GAAG,GAAG,QAAQ,CAAC,SAC/C,EAEM,EAAmB,AAAC,IACxB,EAAyB,EAAU,KACjC,EAAS,QAAQ,CAAC,YACpB,EACF,EAEM,EAAqB,AAAC,GACnB,EAAM,QAAQ,CAAC,UAGlB,EAAsB,SAAS,CAAK,EACxC,IAAM,EAAe,EAAM,IAAI,CAAC,+BAC1B,EAAuB,AAAA,EAAA,GAAE,+CACR,EAAmB,GAG1C,EAAiB,GAGb,EAAa,QAAQ,CAAC,eAGtB,EAAa,GAAG,CAAC,YAAa,iBAKhC,EAAyB,EAAc,KACrC,EAAa,WAAW,CAAC,YAC3B,GAEJ,EAEM,EAAwB,SAAS,CAAK,EAC1C,IAAM,EAAe,EAAM,IAAI,CAAC,+BAC1B,EAAuB,AAAA,EAAA,GAAE,+CAA+C,GAAG,CAAC,GAC5E,EAAe,EAAM,QAAQ,CAAC,4BAA4B,GAAG,CAAC,GAC9D,EAAiB,EAAmB,GAG1C,EAAiB,GAEjB,EAAqB,EAAO,EAAc,KACxC,EAAM,WAAW,CAAC,gBAAgB,QAAQ,CAAC,cAC3C,EAAa,WAAW,CAAC,cAAc,QAAQ,CAAC,gBAEhD,QAAQ,GAAG,CAAC,GAGR,EACF,EAAa,GAAG,CAAC,YAAa,oBAE9B,EAAa,GAAG,CAAC,YAAa,iBAGhC,EAAyB,EAAc,KACrC,EAAa,WAAW,CAAC,YAC3B,EACF,EACF,EAEM,EAAuB,SAAS,CAAK,CAAE,CAAY,CAAE,EAAW,KAAO,CAAC,EAC5E,IAAM,EAAY,EAAM,UAAU,GAC5B,EAAe,EAAa,UAAU,GAE5C,EAAM,OAAO,CAAC,CAAE,MAAO,EAAY,CAAa,EAAG,CAAE,SAAU,GAAI,GACnE,EAAa,OAAO,CAAC,CAAE,MAAO,CAAE,EAAG,CAAE,SAAU,IAAK,SAAA,CAAS,EAC/D,EAEM,EAA2B,SAAS,CAAY,CAAE,EAAW,KAAO,CAAC,EACzE,EAAa,OAAO,CAAC,CAAE,OAAQ,SAAU,QAAS,QAAS,EAAG,CAAE,SAAU,IAAK,SAAA,CAAS,EAC1F,EAEA,AAAA,EAAA,GAAE,UAAU,KAAK,CAAC,WACX,MAEL,IAEA,AAAA,EAAA,GAAE,wBAAwB,EAAE,CAAC,QAAS,2BAA4B,WAChE,IAAM,EAAQ,AAAA,EAAA,GAAE,IAAI,EAEhB,EAAM,QAAQ,CAAC,cACjB,EAAoB,GAEpB,EAAsB,EAE1B,GACF","sources":["<anon>","src/js/cases-desktop.jquery.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire48bd\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire48bd\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n//src\\js\\cases-desktop.jquery.js\n\nvar $aaQnt = parcelRequire(\"aaQnt\");\n// Функция для проверки ширины экрана\nconst $95c947e998ff2a48$var$isDesktopWidth = ()=>{\n    return window.matchMedia(\"(min-width: 768px)\").matches;\n};\nconst $95c947e998ff2a48$var$addOddClass = ()=>{\n    (0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(\".card-image-pc-container\").odd().addClass(\"is-odd\");\n};\nconst $95c947e998ff2a48$var$closeDescription = ($element)=>{\n    $95c947e998ff2a48$var$animateDescriptionToggle($element, ()=>{\n        $element.addClass(\"is-hidden\");\n    });\n};\nconst $95c947e998ff2a48$var$isRightAlignedCard = ($card)=>{\n    return $card.hasClass(\"is-odd\");\n};\nconst $95c947e998ff2a48$var$handleWideCardClick = function($card) {\n    const $description = $card.find(\".case-description-container\");\n    const $previousDescription = (0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(\".case-description-container:not(.is-hidden)\");\n    const isRightAligned = $95c947e998ff2a48$var$isRightAlignedCard($card);\n    // Закрытие предыдущего открытого описания\n    $95c947e998ff2a48$var$closeDescription($previousDescription);\n    // Открытие текущего описания\n    if ($description.hasClass(\"is-hidden\")) {\n        // Центрирование описания\n        if (isRightAligned) $description.css(\"transform\", \"translateX(0)\");\n        else $description.css(\"transform\", \"translateX(0)\");\n        $95c947e998ff2a48$var$animateDescriptionToggle($description, ()=>{\n            $description.removeClass(\"is-hidden\");\n        });\n    }\n};\nconst $95c947e998ff2a48$var$handleNarrowCardClick = function($card) {\n    const $description = $card.find(\".case-description-container\");\n    const $previousDescription = (0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(\".case-description-container:not(.is-hidden)\").not($description);\n    const $siblingCard = $card.siblings(\".card-image-pc-container\").not($card);\n    const isRightAligned = $95c947e998ff2a48$var$isRightAlignedCard($card);\n    // Закрытие предыдущего открытого описания\n    $95c947e998ff2a48$var$closeDescription($previousDescription);\n    $95c947e998ff2a48$var$animateCardExpansion($card, $siblingCard, ()=>{\n        $card.removeClass(\"narrow-image\").addClass(\"wide-image\");\n        $siblingCard.removeClass(\"wide-image\").addClass(\"narrow-image\");\n        console.log(isRightAligned);\n        // Центрирование описания\n        if (isRightAligned) $description.css(\"transform\", \"translateX(-35%)\");\n        else $description.css(\"transform\", \"translateX(0)\");\n        $95c947e998ff2a48$var$animateDescriptionToggle($description, ()=>{\n            $description.removeClass(\"is-hidden\");\n        });\n    });\n};\nconst $95c947e998ff2a48$var$animateCardExpansion = function($card, $siblingCard, complete = ()=>{}) {\n    const cardWidth = $card.outerWidth();\n    const siblingWidth = $siblingCard.outerWidth();\n    $card.animate({\n        width: cardWidth + siblingWidth\n    }, {\n        duration: 500\n    });\n    $siblingCard.animate({\n        width: 0\n    }, {\n        duration: 500,\n        complete: complete\n    });\n};\nconst $95c947e998ff2a48$var$animateDescriptionToggle = function($description, complete = ()=>{}) {\n    $description.animate({\n        height: \"toggle\",\n        opacity: \"toggle\"\n    }, {\n        duration: 500,\n        complete: complete\n    });\n};\n(0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(document).ready(function() {\n    if (!$95c947e998ff2a48$var$isDesktopWidth()) return;\n    $95c947e998ff2a48$var$addOddClass();\n    (0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(\".case-card-pc-module\").on(\"click\", \".card-image-pc-container\", function() {\n        const $card = (0, (/*@__PURE__*/$parcel$interopDefault($aaQnt)))(this);\n        if ($card.hasClass(\"wide-image\")) $95c947e998ff2a48$var$handleWideCardClick($card);\n        else $95c947e998ff2a48$var$handleNarrowCardClick($card);\n    });\n}) // if (isDesktopWidth()) {\n //   $(document).ready(function() {\n //     const $caseModules = $('.case-card-pc-module');\n //\n //     $caseModules.each(function() {\n //       const $module = $(this);\n //       const $containers = $module.find('.card-flex-pc-container');\n //       const $cards = $module.find('.card-image-pc-container');\n //\n //       // Функции для обработки кликов и анимаций\n //       const handleWideCardClick = function($card) {\n //         const $description = $card.find('.case-description-container');\n //         const $previousDescription = $('.case-description-container:not(.is-hidden)');\n //         const $container = $card.closest('.card-flex-pc-container');\n //         const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\n //\n //         // Закрытие предыдущего открытого описания\n //         animateDescriptionToggle($previousDescription, () => {\n //           $previousDescription.addClass('is-hidden');\n //         })\n //\n //         // Открытие текущего описания\n //         if ($description.hasClass('is-hidden')) {\n //           // Центрирование описания\n //           if (isRightAligned) {\n //             $description.css('transform', 'translateX(0)');\n //           } else {\n //             $description.css('transform', 'translateX(0)');\n //           }\n //\n //           animateDescriptionToggle($description, () => {\n //             $description.removeClass('is-hidden');\n //           });\n //         }\n //       };\n //\n //       const handleNarrowCardClick = function($card) {\n //         const $description = $card.find('.case-description-container');\n //         const $container = $card.closest('.card-flex-pc-container');\n //         const $previousDescription = $('.case-description-container:not(.is-hidden)').not($description);\n //         const $siblingCard = $card.siblings('.card-image-pc-container').not($card);\n //         const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\n //\n //         // Закрытие предыдущего открытого описания\n //         animateDescriptionToggle($previousDescription, () => {\n //           $previousDescription.addClass('is-hidden');\n //         })\n //\n //         animateCardExpansion($card, $siblingCard, () => {\n //           $card.removeClass('narrow-image').addClass('wide-image');\n //           $siblingCard.removeClass('wide-image').addClass('narrow-image');\n //           // $description.removeClass('is-hidden');\n //\n //           // Центрирование описания\n //           if (isRightAligned) {\n //             $description.css('transform', 'translateX(-35%)');\n //           } else {\n //             $description.css('transform', 'translateX(0)');\n //           }\n //\n //           animateDescriptionToggle($description, () => {\n //             $description.removeClass('is-hidden');\n //           });\n //         });\n //       };\n //\n //       const animateCardExpansion = function($card, $siblingCard, complete = () => {}) {\n //         const cardWidth = $card.outerWidth();\n //         const siblingWidth = $siblingCard.outerWidth();\n //\n //         $card.animate({ width: cardWidth + siblingWidth }, { duration: 500 });\n //         $siblingCard.animate({ width: 0 }, { duration: 500, complete });\n //       };\n //\n //       const animateDescriptionToggle = function($description, complete = () => {}) {\n //         $description.animate({ height: 'toggle', opacity: 'toggle' }, { duration: 500, complete });\n //       };\n //\n //       // Добавление обработчиков событий кликов\n //       // $cards.on('click', function() {\n //       //   const $card = $(this);\n //       //\n //       //   if ($card.hasClass('wide-image')) {\n //       //     handleWideCardClick($card);\n //       //   } else {\n //       //     handleNarrowCardClick($card);\n //       //   }\n //       // });\n //     });\n //   });\n // }\n;\n\n\n//# sourceMappingURL=cases.6e7383f2.js.map\n","//src\\js\\cases-desktop.jquery.js\r\n\r\nimport $ from 'jquery';\r\n\r\n// Функция для проверки ширины экрана\r\nconst isDesktopWidth = () => {\r\n  return window.matchMedia('(min-width: 768px)').matches;\r\n}\r\n\r\nconst addOddClass = () => {\r\n  $('.card-image-pc-container').odd().addClass('is-odd');\r\n}\r\n\r\nconst closeDescription = ($element) => {\r\n  animateDescriptionToggle($element, () => {\r\n    $element.addClass('is-hidden');\r\n  })\r\n}\r\n\r\nconst isRightAlignedCard = ($card) => {\r\n  return $card.hasClass(\"is-odd\");\r\n}\r\n\r\nconst handleWideCardClick = function($card) {\r\n  const $description = $card.find('.case-description-container');\r\n  const $previousDescription = $('.case-description-container:not(.is-hidden)');\r\n  const isRightAligned = isRightAlignedCard($card);\r\n\r\n  // Закрытие предыдущего открытого описания\r\n  closeDescription($previousDescription);\r\n\r\n  // Открытие текущего описания\r\n  if ($description.hasClass('is-hidden')) {\r\n    // Центрирование описания\r\n    if (isRightAligned) {\r\n      $description.css('transform', 'translateX(0)');\r\n    } else {\r\n      $description.css('transform', 'translateX(0)');\r\n    }\r\n\r\n    animateDescriptionToggle($description, () => {\r\n      $description.removeClass('is-hidden');\r\n    });\r\n  }\r\n};\r\n\r\nconst handleNarrowCardClick = function($card) {\r\n  const $description = $card.find('.case-description-container');\r\n  const $previousDescription = $('.case-description-container:not(.is-hidden)').not($description);\r\n  const $siblingCard = $card.siblings('.card-image-pc-container').not($card);\r\n  const isRightAligned = isRightAlignedCard($card)\r\n\r\n  // Закрытие предыдущего открытого описания\r\n  closeDescription($previousDescription);\r\n\r\n  animateCardExpansion($card, $siblingCard, () => {\r\n    $card.removeClass('narrow-image').addClass('wide-image');\r\n    $siblingCard.removeClass('wide-image').addClass('narrow-image');\r\n\r\n    console.log(isRightAligned);\r\n\r\n    // Центрирование описания\r\n    if (isRightAligned) {\r\n      $description.css('transform', 'translateX(-35%)');\r\n    } else {\r\n      $description.css('transform', 'translateX(0)');\r\n    }\r\n\r\n    animateDescriptionToggle($description, () => {\r\n      $description.removeClass('is-hidden');\r\n    });\r\n  });\r\n};\r\n\r\nconst animateCardExpansion = function($card, $siblingCard, complete = () => {}) {\r\n  const cardWidth = $card.outerWidth();\r\n  const siblingWidth = $siblingCard.outerWidth();\r\n\r\n  $card.animate({ width: cardWidth + siblingWidth }, { duration: 500 });\r\n  $siblingCard.animate({ width: 0 }, { duration: 500, complete });\r\n};\r\n\r\nconst animateDescriptionToggle = function($description, complete = () => {}) {\r\n  $description.animate({ height: 'toggle', opacity: 'toggle' }, { duration: 500, complete });\r\n};\r\n\r\n$(document).ready(function () {\r\n  if (!isDesktopWidth()) return;\r\n\r\n  addOddClass();\r\n\r\n  $('.case-card-pc-module').on('click', '.card-image-pc-container', function() {\r\n    const $card = $(this);\r\n\r\n    if ($card.hasClass('wide-image')) {\r\n      handleWideCardClick($card);\r\n    } else {\r\n      handleNarrowCardClick($card);\r\n    }\r\n  })\r\n})\r\n\r\n// if (isDesktopWidth()) {\r\n//   $(document).ready(function() {\r\n//     const $caseModules = $('.case-card-pc-module');\r\n//\r\n//     $caseModules.each(function() {\r\n//       const $module = $(this);\r\n//       const $containers = $module.find('.card-flex-pc-container');\r\n//       const $cards = $module.find('.card-image-pc-container');\r\n//\r\n//       // Функции для обработки кликов и анимаций\r\n//       const handleWideCardClick = function($card) {\r\n//         const $description = $card.find('.case-description-container');\r\n//         const $previousDescription = $('.case-description-container:not(.is-hidden)');\r\n//         const $container = $card.closest('.card-flex-pc-container');\r\n//         const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\r\n//\r\n//         // Закрытие предыдущего открытого описания\r\n//         animateDescriptionToggle($previousDescription, () => {\r\n//           $previousDescription.addClass('is-hidden');\r\n//         })\r\n//\r\n//         // Открытие текущего описания\r\n//         if ($description.hasClass('is-hidden')) {\r\n//           // Центрирование описания\r\n//           if (isRightAligned) {\r\n//             $description.css('transform', 'translateX(0)');\r\n//           } else {\r\n//             $description.css('transform', 'translateX(0)');\r\n//           }\r\n//\r\n//           animateDescriptionToggle($description, () => {\r\n//             $description.removeClass('is-hidden');\r\n//           });\r\n//         }\r\n//       };\r\n//\r\n//       const handleNarrowCardClick = function($card) {\r\n//         const $description = $card.find('.case-description-container');\r\n//         const $container = $card.closest('.card-flex-pc-container');\r\n//         const $previousDescription = $('.case-description-container:not(.is-hidden)').not($description);\r\n//         const $siblingCard = $card.siblings('.card-image-pc-container').not($card);\r\n//         const isRightAligned = $container.parent().children('.card-flex-pc-container').index($container) % 2 === 1;\r\n//\r\n//         // Закрытие предыдущего открытого описания\r\n//         animateDescriptionToggle($previousDescription, () => {\r\n//           $previousDescription.addClass('is-hidden');\r\n//         })\r\n//\r\n//         animateCardExpansion($card, $siblingCard, () => {\r\n//           $card.removeClass('narrow-image').addClass('wide-image');\r\n//           $siblingCard.removeClass('wide-image').addClass('narrow-image');\r\n//           // $description.removeClass('is-hidden');\r\n//\r\n//           // Центрирование описания\r\n//           if (isRightAligned) {\r\n//             $description.css('transform', 'translateX(-35%)');\r\n//           } else {\r\n//             $description.css('transform', 'translateX(0)');\r\n//           }\r\n//\r\n//           animateDescriptionToggle($description, () => {\r\n//             $description.removeClass('is-hidden');\r\n//           });\r\n//         });\r\n//       };\r\n//\r\n//       const animateCardExpansion = function($card, $siblingCard, complete = () => {}) {\r\n//         const cardWidth = $card.outerWidth();\r\n//         const siblingWidth = $siblingCard.outerWidth();\r\n//\r\n//         $card.animate({ width: cardWidth + siblingWidth }, { duration: 500 });\r\n//         $siblingCard.animate({ width: 0 }, { duration: 500, complete });\r\n//       };\r\n//\r\n//       const animateDescriptionToggle = function($description, complete = () => {}) {\r\n//         $description.animate({ height: 'toggle', opacity: 'toggle' }, { duration: 500, complete });\r\n//       };\r\n//\r\n//       // Добавление обработчиков событий кликов\r\n//       // $cards.on('click', function() {\r\n//       //   const $card = $(this);\r\n//       //\r\n//       //   if ($card.hasClass('wide-image')) {\r\n//       //     handleWideCardClick($card);\r\n//       //   } else {\r\n//       //     handleNarrowCardClick($card);\r\n//       //   }\r\n//       // });\r\n//     });\r\n//   });\r\n// }\r\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$aaQnt","$95c947e998ff2a48$var$isDesktopWidth","matchMedia","matches","$95c947e998ff2a48$var$addOddClass","odd","addClass","$95c947e998ff2a48$var$closeDescription","$element","$95c947e998ff2a48$var$animateDescriptionToggle","$95c947e998ff2a48$var$isRightAlignedCard","$card","hasClass","$95c947e998ff2a48$var$handleWideCardClick","$description","find","$previousDescription","css","removeClass","$95c947e998ff2a48$var$handleNarrowCardClick","not","$siblingCard","siblings","isRightAligned","$95c947e998ff2a48$var$animateCardExpansion","console","log","complete","cardWidth","outerWidth","siblingWidth","animate","width","duration","height","opacity","document","ready","on"],"version":3,"file":"cases.6e7383f2.js.map"}